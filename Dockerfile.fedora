ARG base="fedora"
FROM ${base}

# https://docs.yoctoproject.org/ref-manual/system-requirements.html#fedora-packages
RUN \
    . /etc/os-release \
    ; if [[ "$ID" == "fedora" ]]; then \
        dnf install -y \
            perl-File-Compare \
            perl-File-Copy \
            perl-FindBin \
            perl-locale \
            python; \
      else \
        dnf install -y epel-release; \
        if [[ "${VERSION_ID%%.*}" == 8 ]]; then \
            dnf config-manager --set-enabled powertools; \
        else \
            dnf config-manager --set-enabled crb; \
        fi; \
        dnf makecache; \
      fi \
    ; dnf install -y \
        bzip2 \
        ccache \
        chrpath \
        cpio \
        cpp \
        diffstat \
        diffutils \
        file \
        findutils \
        gawk \
        gcc \
        gcc-c++ \
        git \
        glibc-devel \
        glibc-langpack-en \
        gzip \
        hostname \
        libacl \
        lz4 \
        make \
        patch \
        perl \
        perl-Data-Dumper \
        perl-Text-ParseWords \
        perl-Thread-Queue \
        perl-bignum \
        python3 \
        python3-GitPython \
        python3-jinja2 \
        python3-pexpect \
        python3-pip \
        rpcgen \
        socat \
        tar \
        texinfo \
        unzip \
        wget \
        which \
        xz \
        zstd \
    && dnf clean all

ADD http://git.yoctoproject.org/cgit/cgit.cgi/poky/plain/scripts/oe-git-proxy /usr/local/bin/
RUN chmod 755 /usr/local/bin/oe-git-proxy

RUN \
    useradd -ms /bin/bash builder \
    && echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
USER builder
RUN \
    echo '. <(buildenv init)' >> ~/.bashrc \
    && echo '[[ ${NO_PROXY} ]] || export NO_PROXY=$no_proxy' >> ~/.bashrc \
    && echo '[[ ${http_proxy} ]] && export GIT_PROXY_COMMAND=oe-git-proxy' >> ~/.bashrc \
    && git config --global user.email "builder@yocto" \
    && git config --global user.name "Yocto Builder" \
    && git config --global url."https://github.com/".insteadOf git://github.com/

USER root
WORKDIR /home/builder

COPY buildenv/entrypoint.sh /buildenv-entrypoint.sh
COPY buildenv/buildenv.sh /usr/local/bin/buildenv

COPY buildenv/buildenv.conf /etc/
COPY buildenv.d/ /etc/buildenv.d/

RUN sed -i 's/^#DOTCMDS=.*/DOTCMDS=setup/' /etc/buildenv.conf

ENTRYPOINT ["/buildenv-entrypoint.sh"]
CMD ["/bin/bash"]

ARG yocto_branch
ENV \
    LANG=en_US.UTF-8 \
    YOCTO_BITBAKE_TARGET=core-image-minimal \
    YOCTO_BRANCH=${yocto_branch} \
    YOCTO_CCACHE_DIR="" \
    YOCTO_DL_DIR="" \
    YOCTO_MACHINE="" \
    YOCTO_SSTATE_DIR=""
